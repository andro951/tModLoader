--- src/TerrariaNetCore/Terraria/UI/ChestUI.cs
+++ src/tModLoader/Terraria/UI/ChestUI.cs
@@ -6,6 +_,8 @@
 using Terraria.GameContent;
 using Terraria.GameInput;
 using Terraria.Localization;
+using Terraria.ID;
+using Terraria.ModLoader;
 using Terraria.UI.Chat;
 using Terraria.UI.Gamepad;
 
@@ -105,6 +_,8 @@
 						text = Lang.chestType2[tile.frameX / 36].Value;
 					else if (tile.type == 88)
 						text = Lang.dresserType[tile.frameX / 54].Value;
+					else if (TileID.Sets.BasicChest[Main.tile[player.chestX, player.chestY].type] || TileID.Sets.BasicDresser[Main.tile[player.chestX, player.chestY].type])
+						text = TileLoader.ContainerName(Main.tile[player.chestX, player.chestY].type);
 				}
 			}
 			else if (player.chest == -2) {
@@ -399,10 +_,15 @@
 								if (chest.item[i].stack >= chest.item[i].maxStack || !player.inventory[num].IsTheSameAs(chest.item[i]))
 									continue;
 
+								if (!ItemLoader.CanStack(chest.item[i], player.inventory[num]))
+									continue;
+
 								int num2 = player.inventory[num].stack;
 								if (player.inventory[num].stack + chest.item[i].stack > chest.item[i].maxStack)
 									num2 = chest.item[i].maxStack - chest.item[i].stack;
 
+								ItemLoader.OnStack(chest.item[i], player.inventory[num], num2);//Deposit all into chest (Deposit All button)
+
 								player.inventory[num].stack -= num2;
 								chest.item[i].stack += num2;
 								SoundEngine.PlaySound(7);
@@ -423,11 +_,14 @@
 									NetMessage.SendData(32, -1, -1, null, player.chest, i);
 							}
 							else if (player.chest == -3) {
-								if (player.bank2.item[i].stack < player.bank2.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank2.item[i])) {
+								//if (player.bank2.item[i].stack < player.bank2.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank2.item[i])) {
+								if (player.bank2.item[i].stack < player.bank2.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank2.item[i]) && ItemLoader.CanStack(player.bank2.item[i], player.inventory[num])) {
 									int num3 = player.inventory[num].stack;
 									if (player.inventory[num].stack + player.bank2.item[i].stack > player.bank2.item[i].maxStack)
 										num3 = player.bank2.item[i].maxStack - player.bank2.item[i].stack;
 
+									ItemLoader.OnStack(player.bank2.item[i], player.inventory[num], num3);//Safe deposit all button
+
 									player.inventory[num].stack -= num3;
 									player.bank2.item[i].stack += num3;
 									SoundEngine.PlaySound(7);
@@ -443,11 +_,14 @@
 								}
 							}
 							else if (player.chest == -4) {
-								if (player.bank3.item[i].stack < player.bank3.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank3.item[i])) {
+								//if (player.bank3.item[i].stack < player.bank3.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank3.item[i])) {
+								if (player.bank3.item[i].stack < player.bank3.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank3.item[i]) && ItemLoader.CanStack(player.bank3.item[i], player.inventory[num])) {
 									int num4 = player.inventory[num].stack;
 									if (player.inventory[num].stack + player.bank3.item[i].stack > player.bank3.item[i].maxStack)
 										num4 = player.bank3.item[i].maxStack - player.bank3.item[i].stack;
 
+									ItemLoader.OnStack(player.bank3.item[i], player.inventory[num], num4);//Defender's forge deposit all button
+
 									player.inventory[num].stack -= num4;
 									player.bank3.item[i].stack += num4;
 									SoundEngine.PlaySound(7);
@@ -463,11 +_,14 @@
 								}
 							}
 							else if (player.chest == -5) {
-								if (player.bank4.item[i].stack < player.bank4.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank4.item[i])) {
+								//if (player.bank4.item[i].stack < player.bank4.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank4.item[i])) {
+								if (player.bank4.item[i].stack < player.bank4.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank4.item[i]) && ItemLoader.CanStack(player.bank4.item[i], player.inventory[num])) {
 									int num5 = player.inventory[num].stack;
 									if (player.inventory[num].stack + player.bank4.item[i].stack > player.bank4.item[i].maxStack)
 										num5 = player.bank4.item[i].maxStack - player.bank4.item[i].stack;
 
+									ItemLoader.OnStack(player.bank4.item[i], player.inventory[num], num5);//Void bank deposit all button
+
 									player.inventory[num].stack -= num5;
 									player.bank4.item[i].stack += num5;
 									SoundEngine.PlaySound(7);
@@ -482,11 +_,14 @@
 									}
 								}
 							}
-							else if (player.bank.item[i].stack < player.bank.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank.item[i])) {
+							//else if (player.bank.item[i].stack < player.bank.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank.item[i])) {
+							else if (player.bank.item[i].stack < player.bank.item[i].maxStack && player.inventory[num].IsTheSameAs(player.bank.item[i]) && ItemLoader.CanStack(player.bank.item[i], player.inventory[num])) {
 								int num6 = player.inventory[num].stack;
 								if (player.inventory[num].stack + player.bank.item[i].stack > player.bank.item[i].maxStack)
 									num6 = player.bank.item[i].maxStack - player.bank.item[i].stack;
 
+								ItemLoader.OnStack(player.bank.item[i], player.inventory[num], num6);//Piggy bank deposit all button
+
 								player.inventory[num].stack -= num6;
 								player.bank.item[i].stack += num6;
 								SoundEngine.PlaySound(7);
@@ -615,7 +_,8 @@
 				int num2 = list2[k];
 				int netID = item[num2].netID;
 				foreach (KeyValuePair<int, int> item2 in dictionary) {
-					if (item2.Value == netID && inventory[item2.Key].netID == netID) {
+					//if (item2.Value == netID && inventory[item2.Key].netID == netID) {
+					if (item2.Value == netID && inventory[item2.Key].netID == netID && ItemLoader.CanStack(item[num2], inventory[item2.Key])) {
 						int num3 = inventory[item2.Key].stack;
 						int num4 = item[num2].maxStack - item[num2].stack;
 						if (num4 == 0)
@@ -624,6 +_,8 @@
 						if (num3 > num4)
 							num3 = num4;
 
+						ItemLoader.OnStack(item[num2], inventory[item2.Key], num3);//Quick stack into chest (Quick stack button) 1st stack
+
 						SoundEngine.PlaySound(7);
 						item[num2].stack += num3;
 						inventory[item2.Key].stack -= num3;
@@ -655,11 +_,15 @@
 					if ((item5.Value != num6 || inventory[item5.Key].netID != num6) && (!flag || inventory[item5.Key].stack <= 0))
 						continue;
 
+					// Outmost for iterates over empty slots, flag not true means item was not put in yet (meaning CanStack does not have to be checked)
+					if (!flag && !ItemLoader.CanStack(item[num5], inventory[item5.Key]))
+						continue;
+
 					SoundEngine.PlaySound(7);
 					if (flag) {
 						num6 = item5.Value;
 						item[num5] = inventory[item5.Key];
-						inventory[item5.Key] = new Item();
+						inventory[item5.Key] = new Item();//Just moving the item, don't call OnStack here.
 					}
 					else {
 						int num7 = inventory[item5.Key].stack;
@@ -670,6 +_,8 @@
 						if (num7 > num8)
 							num7 = num8;
 
+						ItemLoader.OnStack(item[num5], inventory[item5.Key], num7);//stack into inventory with Quickstack (Quick stack button) subsequent stacking past the first
+
 						item[num5].stack += num7;
 						inventory[item5.Key].stack -= num7;
 						if (inventory[item5.Key].stack == 0)
@@ -746,7 +_,8 @@
 			List<int> list2 = new List<int>();
 			for (int num = 57; num >= 0; num--) {
 				if ((num < 50 || num >= 54) && (inventory[num].type < 71 || inventory[num].type > 74)) {
-					if (inventory[num].stack > 0 && inventory[num].maxStack > 1 && inventory[num].prefix == 0) {
+					//if (inventory[num].stack > 0 && inventory[num].maxStack > 1 && inventory[num].prefix == 0) {
+					if (inventory[num].stack > 0 && inventory[num].maxStack > 1) { // TML: #StackablePrefixWeapons, checked moved down
 						hashSet.Add(inventory[num].netID);
 						if (inventory[num].stack < inventory[num].maxStack)
 							list.Add(num);
@@ -759,7 +_,8 @@
 
 			bool flag = false;
 			for (int i = 0; i < item.Length; i++) {
-				if (item[i].stack < 1 || item[i].prefix != 0 || !hashSet.Contains(item[i].netID))
+				//if (item[i].stack < 1 || item[i].prefix != 0 || !hashSet.Contains(item[i].netID))
+				if (item[i].stack < 1 || !hashSet.Contains(item[i].netID)) // TML: #StackablePrefixWeapons, checked moved down
 					continue;
 
 				bool flag2 = false;
@@ -772,10 +_,15 @@
 					if (inventory[num2].netID != item[i].netID || ItemSlot.PickItemMovementAction(inventory, context, num2, item[i]) == -1)
 						continue;
 
+					if (!ItemLoader.CanStack(inventory[num2], item[i])) // TML: #StackablePrefixWeapons, check moved here
+						continue;
+
 					int num3 = item[i].stack;
 					if (inventory[num2].maxStack - inventory[num2].stack < num3)
 						num3 = inventory[num2].maxStack - inventory[num2].stack;
 
+					ItemLoader.OnStack(inventory[num2], item[i], num3);//Chest restock button
+
 					inventory[num2].stack += num3;
 					item[i].stack -= num3;
 					flag = true;
@@ -1002,6 +_,9 @@
 					if (chestinv[i].stack >= chestinv[i].maxStack || !I.IsTheSameAs(chestinv[i]))
 						continue;
 
+					if (!ItemLoader.CanStack(chestinv[i], I))
+						continue;
+
 					int num = I.stack;
 					if (I.stack + chestinv[i].stack > chestinv[i].maxStack)
 						num = chestinv[i].maxStack - chestinv[i].stack;
@@ -1010,6 +_,8 @@
 						flag = (flag || num > 0);
 						break;
 					}
+
+					ItemLoader.OnStack(chestinv[i], I, num);//Shift click item from inventory to chest
 
 					I.stack -= num;
 					chestinv[i].stack += num;
